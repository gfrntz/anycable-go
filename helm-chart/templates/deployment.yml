apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name | quote }}
  labels:
    app: {{ template "anycable.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ default 2 .Values.replicas }}
  revisionHistoryLimit: {{ default 10 .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ template "anycable.name" . }}
      release: {{ .Release.Name | quote }}
    strategy:
      rollingUpdate:
        maxSurge: {{ .Values.rollingUpdate.maxSurge }}
        maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
      type: {{ .Values.image.pullPolicy | quote }}
  template:
    metadata:
      labels:
        app: {{ template "anycable.name" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/env-secret.yml") . | sha256sum }}
      name: {{ .Release.Name | quote }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: {{ template "anycable.name" . }}
                  chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
                  release: {{ .Release.Name | quote }}
            weight: 100
      containers:
      - env:
        {{- if .Values.anycableHost }}
        - name: ANYCABLE_HOST
          valueFrom:
            secretKeyRef:
              key: anycableHost
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableDebug }}
        - name: ANYCABLE_DEBUG
          valueFrom:
            secretKeyRef:
              key: anycableDebug
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycablePort }}
        - name: ANYCABLE_PORT
          valueFrom:
            secretKeyRef:
              key: anycablePort
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableRedisUrl }}
        - name: ANYCABLE_REDIS_URL
          valueFrom:
            secretKeyRef:
              key: anycableRedisUrl
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycablePath }}
        - name: ANYCABLE_PATH
          valueFrom:
            secretKeyRef:
              key: anycablePath
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableSSLCert }}
        - name: ANYCABLE_SSL_CERT
          valueFrom:
            secretKeyRef:
              key: anycableSSLCert
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableSSLKey }}
        - name: ANYCABLE_SSL_KEY
          valueFrom:
            secretKeyRef:
              key: anycableSSLKey
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableRedisChannel }}
        - name: ANYCABLE_REDIS_CHANNEL
          valueFrom:
            secretKeyRef:
              key: anycableRedisChannel
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableRpcHost }}
        - name: ANYCABLE_RPC_HOST
          valueFrom:
            secretKeyRef:
              key: anycableRpcHost
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableHeaders }}
        - name: ANYCABLE_HEADERS
          valueFrom:
            secretKeyRef:
              key: anycableHeaders
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableDisconnectRate }}
        - name: ANYCABLE_DISCONNECT_RATE
          valueFrom:
            secretKeyRef:
              key: anycableDisconnectRate
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableLogLevel }}
        - name: ANYCABLE_LOG_LEVEL
          valueFrom:
            secretKeyRef:
              key: anycableLogLevel
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableLogFormat }}
        - name: ANYCABLE_LOG_FORMAT
          valueFrom:
            secretKeyRef:
              key: anycableLogFormat
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableMetricsLog }}
        - name: ANYCABLE_METRICS_LOG
          valueFrom:
            secretKeyRef:
              key: anycableMetricsLog
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableMetricsLogInterval }}
        - name: ANYCABLE_METRICS_LOG_INTERVAL
          valueFrom:
            secretKeyRef:
              key: anycableMetricsLogInterval
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableMetricsPath }}
        - name: ANYCABLE_METRICS_PATH
          valueFrom:
            secretKeyRef:
              key: anycableMetricsPath
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableMetricsHost }}
        - name: ANYCABLE_METRICS_HOST
          valueFrom:
            secretKeyRef:
              key: anycableMetricsHost
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.anycableMetricsPort }}
        - name: ANYCABLE_METRICS_PORT
          valueFrom:
            secretKeyRef:
              key: anycableMetricsPort
              name: {{ .Release.Name }}-secrets
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        # readinessProbe:
        #   exec:
        #     command:
        #     - bash
        #     - -c
        #     - '[[ ''$(ps -p 1 -o args)'' != *''bash /runner/init''* ]]'
        #   failureThreshold: 1
        #   initialDelaySeconds: 30
        #   periodSeconds: 5
        #   successThreshold: 1
        #   timeoutSeconds: 5
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
         {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
